syntax = "proto3";

package services;

import "endpoints/batch_allocate_artifact_part.proto";
import "endpoints/batch_create_artifact.proto";
import "endpoints/batch_execute_function.proto";
import "endpoints/batch_finalize_artifact.proto";
import "endpoints/batch_get_artifact_download_url.proto";
import "endpoints/batch_get_artifact_upload_url.proto";
import "endpoints/batch_get_artifact.proto";
import "endpoints/check_function.proto";
import "endpoints/header.proto";
import "endpoints/register_function.proto";
import "endpoints/sdk_server_ready.proto";

service WorkerService {
  rpc BatchAllocateArtifactPart(endpoints.BatchAllocateArtifactPartRequest) returns (endpoints.BatchAllocateArtifactPartResponse);

  rpc BatchCreateArtifact(endpoints.BatchCreateArtifactRequest) returns (endpoints.BatchCreateArtifactResponse);

  rpc BatchExecuteFunction(endpoints.BatchExecuteFunctionRequest) returns (endpoints.BatchExecuteFunctionResponse);

  rpc BatchFinalizeArtifact(endpoints.BatchFinalizeArtifactRequest) returns (endpoints.BatchFinalizeArtifactResponse);

  rpc BatchGetArtifactDownloadUrl(endpoints.BatchGetArtifactDownloadUrlRequest) returns (endpoints.BatchGetArtifactDownloadUrlResponse);

  rpc BatchGetArtifactUploadUrl(endpoints.BatchGetArtifactUploadUrlRequest) returns (endpoints.BatchGetArtifactUploadUrlResponse);

  rpc BatchGetArtifact(endpoints.BatchGetArtifactRequest) returns (endpoints.BatchGetArtifactResponse);

  rpc CheckFunction(endpoints.CheckFunctionRequest) returns (endpoints.CheckFunctionResponse);

  rpc Initiate(endpoints.HeaderRequest) returns (endpoints.HeaderResponse);

  rpc RegisterFunction(endpoints.RegisterFunctionRequest) returns (endpoints.RegisterFunctionResponse);

  rpc SdkServerReady(endpoints.SdkServerReadyRequest) returns (endpoints.SdkServerReadyResponse);
}
