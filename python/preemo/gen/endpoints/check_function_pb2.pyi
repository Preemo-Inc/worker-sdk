"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import preemo.gen.models.registered_function_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class CheckFunctionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REGISTERED_FUNCTION_FIELD_NUMBER: builtins.int
    @property
    def registered_function(self) -> preemo.gen.models.registered_function_pb2.RegisteredFunction: ...
    def __init__(
        self,
        *,
        registered_function: preemo.gen.models.registered_function_pb2.RegisteredFunction | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_registered_function", b"_registered_function", "registered_function", b"registered_function"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_registered_function", b"_registered_function", "registered_function", b"registered_function"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_registered_function", b"_registered_function"]) -> typing_extensions.Literal["registered_function"] | None: ...

global___CheckFunctionRequest = CheckFunctionRequest

@typing_extensions.final
class CheckFunctionResponse(google.protobuf.message.Message):
    """A successful response indicates existence.
    If the function does not exist a NOT_FOUND status will be thrown.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___CheckFunctionResponse = CheckFunctionResponse
