#!/bin/bash

if [[ "${0}" != *"bin/dev/generate_protos.sh" ]] || [[ "$(basename $(pwd))" != "python" ]]; then
  echo "script must be run from the subrepo root: worker-sdk/python"
  exit 1
fi

PROTOBUF_DIR="../protobuf"
GEN_DIR="preemo/gen"

INIT_FILE_CONTENTS="# Generated by bin/dev/generate_protos.sh.  DO NOT EDIT!

# protoc does not and will not generate relative imports for python.
# This workaround was copied from https://github.com/protocolbuffers/protobuf/issues/1491#issuecomment-429735834:
import os
import sys

sys.path.append(os.path.dirname(__file__))"

PROTOBUF_SUBDIRS=()
for file in "${PROTOBUF_DIR}"/*; do
  if [ -d "${file}" ]; then
    PROTOBUF_SUBDIRS+=("$(basename ${file})")
  fi
done

function fixPyImports {
  # This fixes imports by recursively creating __init__ files that modify sys.path
  local dir="${1}"

  echo "${INIT_FILE_CONTENTS}" > "${dir}/__init__.py"

  for file in "${dir}"/*; do
    if [ -d "${file}" ]; then
      fixPyImports "${file}"
    fi
  done
}

function fixPyiImports {
  # This fixes imports by recursively sed replacing bad absolute imports
  local dir="${1}"

  for file in "${dir}"/*; do
    if [ -d "${file}" ]; then
      fixPyiImports "${file}"
    elif [[ "${file}" == *.pyi ]]; then
      for subDir in "${PROTOBUF_SUBDIRS[@]}"; do
        sed -i "" "s/${subDir}\./preemo.gen.${subDir}./g" "${file}"
      done
    fi
  done
}

rm -rf "${GEN_DIR}"
mkdir "${GEN_DIR}"

python3 -m grpc_tools.protoc \
  --mypy_out="${GEN_DIR}" \
  --proto_path "${PROTOBUF_DIR}" \
  --python_out="${GEN_DIR}" \
  $(find "${PROTOBUF_DIR}" -name "*.proto" -not -path "${PROTOBUF_DIR}/services/*")

python3 -m grpc_tools.protoc \
  --grpc_python_out="${GEN_DIR}" \
  --mypy_grpc_out="${GEN_DIR}" \
  --proto_path "${PROTOBUF_DIR}" \
  $(find "${PROTOBUF_DIR}/services" -name "*.proto")

fixPyImports "${GEN_DIR}"
fixPyiImports "${GEN_DIR}"
